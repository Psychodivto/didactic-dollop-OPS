# This is a basic workflow to help you get started with Actions

name: DevOps practice

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: adsoft/aiops:lastest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: install unzip
        run: apt-get install unzip
      - name: download model
        run: wget -O pokemon-model.zip https://firebasestorage.googleapis.com/v0/b/pokedex-eba21.appspot.com/o/pokemon-model.zip?alt=media&token=37bbd62a-d542-4ee2-bf3e-51d559c9bf08
      - name: extract model
        run: unzip pokemon-model.zip

      - name: docker login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 
        
    - name: Download and run the Docker base image
      run: docker run -d --name serving_base tensorflow/serving

    - name: copy model to the Docker image
      run: docker cp pokemon_model serving_base:/models/${{secrets.MODEL_NAME}}
      
    - name: Build the custom Docker image
      run: docker commit --change "ENV MODEL_NAME ${{secrets.MODEL_NAME}}" serving_base ${{secrets.DOCKER_USER}}/tensorflow-${{secrets.MODEL_NAME}}:${{ github.sha }}
  
    - name: Docker Push 
      run: docker push ${{secrets.DOCKER_USER}}/tensorflow-${{secrets.MODEL_NAME}}:${{ github.sha }}

    - name: update docker user in k8 
      run: sed -i 's/{docker_user}/${{secrets.DOCKER_USER}}/g' manifests/linear_model_k8s.yml

    - name: update model name in k8 
      run: sed -i 's/{model_name}/${{secrets.MODEL_NAME}}/g' manifests/linear_model_k8s.yml

    - name: update _ by - 
      run: sed -i 's/_/-/g' manifests/linear_model_k8s.yml

    - name: update sha in k8
      run: sed -i 's/{github.sha}/${{ github.sha }}/g' manifests/linear_model_k8s.yml

    - name: list  
      run: cat manifests/linear_model_k8s.yml

    - uses: okteto/context@2.7.0
      with:
        token: ${{secrets.OKTETO_TOKEN }}

    - name: Deploy and Wait
      uses: okteto/actions/deploy@v1
      env:
        KUBECONFIG: ${{ steps.namespace.outputs.kubeconfig }}
      with:
        namespace: ${{secrets.OKTETO_NAMESPACE }}
        manifest: manifests/linear_model_k8s.yml
        tag: ${{ secrets.DOCKER_USERNAME }}/tensorflow_${{secrets.MODEL_NAME}}:${{ github.sha }}
        
